{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","maxLength30","maxLengthCreator","minLength2","minLengthCreator","AddMessageReduxForm","reduxForm","form","props","onSubmit","handleSubmit","className","style","messages","Field","component","Textarea","validate","required","name","placeholder","Dialogs","DialogItem","dialogItem","userAvatar","src","avatar","alt","dialogItemName","to","id","activeClassName","active","Message","message","dialog","dialogPage","dialogData","map","key","messagesData","dialogs","value","addMessage","newMessageText","compose","connect","state","dispatch","addMessageAC","withAuthRedirect"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,WAAa,4BAA4B,WAAa,8B,iICM5MC,EAAcC,YAAiB,IAC/BC,EAAaC,YAAiB,GAY9BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAVL,SAACE,GACpB,OAAO,0BAAMC,SAAUD,EAAME,aAAcC,UAAWC,IAAMC,UAExD,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUjB,EAAaE,GAClCgB,KAAM,iBAAkBC,YAAa,uBAC5C,mDAuDOC,EAjDC,SAACb,GACb,IAAMc,EAAa,SAACd,GAChB,OACI,yBAAKG,UAAWC,IAAMW,YAClB,6BACI,yBAAKZ,UAAWC,IAAMY,WAAYC,IAAKjB,EAAMkB,OAAQC,IAAI,MAE7D,yBAAKhB,UAAWC,IAAMgB,gBAClB,kBAAC,IAAD,CAASC,GAAI,YAAcrB,EAAMsB,GACxBC,gBAAiBnB,IAAMoB,QAASxB,EAAMW,SAMzDc,EAAU,SAACzB,GACb,OACI,yBAAKG,UAAU,WAAWH,EAAM0B,UAIlCC,EAAS3B,EAAM4B,WAAWC,WAAWC,KAAI,SAAAnB,GAAI,OAAI,kBAACG,EAAD,CAAYH,KAAMA,EAAKA,KACXW,GAAIX,EAAKW,GACTS,IAAKpB,EAAKW,GACVJ,OAAQP,EAAKO,YAE1Eb,EAAWL,EAAM4B,WAAWI,aAAaF,KAAI,SAAAJ,GAAO,OAAI,kBAACD,EAAD,CAASH,GAAII,EAAQJ,GACZS,IAAKL,EAAQJ,GACbI,QAASA,EAAQA,aAOxF,OACI,yBAAKvB,UAAWC,IAAM6B,SAClB,yBAAK9B,UAAWC,IAAMuB,QACjBA,GAEL,6BACKtB,EACD,kBAACR,EAAD,CAAqBI,SAXhB,SAACiC,GACdlC,EAAMmC,WAAWD,EAAME,sB,wBCjChBC,sBACXC,aAfkB,SAACC,GACnB,MAAO,CACHX,WAAYW,EAAMX,eAID,SAACY,GACtB,MAAM,CACFL,WAAY,SAACC,GACTI,EAASC,YAAaL,SAO9BM,IAFWL,CAGbxB","file":"static/js/3.49fc7201.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2JjBT\",\"dialog\":\"Dialogs_dialog__1Dk5y\",\"active\":\"Dialogs_active__3-0m_\",\"messages\":\"Dialogs_messages__2Ev0P\",\"userAvatar\":\"Dialogs_userAvatar__1Kv2N\",\"dialogItem\":\"Dialogs_dialogItem__2hSPb\"};","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength30 = maxLengthCreator(30)\r\nconst minLength2 = minLengthCreator(2)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit} className={style.messages}>\r\n\r\n        <Field component={Textarea}\r\n               validate={[required, maxLength30, minLength2]}\r\n               name={\"newMessageText\"} placeholder={\"Enter your message\"}/>\r\n        <button >Add Message</button>\r\n    </form>\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nconst Dialogs = (props) => {\r\n    const DialogItem = (props) => {\r\n        return (\r\n            <div className={style.dialogItem}>\r\n                <div>\r\n                    <img className={style.userAvatar} src={props.avatar} alt=\"\"/>\r\n                </div>\r\n                <div className={style.dialogItemName}>\r\n                    <NavLink to={'/dialogs/' + props.id}\r\n                             activeClassName={style.active}>{props.name}</NavLink>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const Message = (props) => {\r\n        return (\r\n            <div className=\"message\">{props.message}</div>\r\n        )\r\n    }\r\n\r\n    const dialog = props.dialogPage.dialogData.map(name => <DialogItem name={name.name}\r\n                                                                       id={name.id}\r\n                                                                       key={name.id}\r\n                                                                       avatar={name.avatar}/>)\r\n\r\n    const messages = props.dialogPage.messagesData.map(message => <Message id={message.id}\r\n                                                                           key={message.id}\r\n                                                                           message={message.message}/>)\r\n\r\n\r\n    let addMessage = (value) => {\r\n        props.addMessage(value.newMessageText);\r\n    }\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialog}>\r\n                {dialog}\r\n            </div>\r\n            <div>\r\n                {messages}\r\n                <AddMessageReduxForm onSubmit={addMessage} />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import {addMessageAC} from \"../../Redux/dialogReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogPage: state.dialogPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addMessage: (newMessageText) => {\r\n            dispatch(addMessageAC(newMessageText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n// const AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n//\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n//\r\n// export default DialogsContainer;"],"sourceRoot":""}